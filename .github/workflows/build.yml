name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Format
      run: find src include test -iregex '.*\.\(c\|h\|cpp\|hpp\|cc\|hh\|cxx\|hxx\)$' | xargs clang-format -n -Werror
  build-linux-win:
    strategy:
      fail-fast: false
      matrix:
        target: [mingw, ubuntu]
        asan: [ON, OFF]
        ubsan: [ON, OFF]
        newdbm: [ON, OFF]
        exclude:
          - target: mingw
            asan: ON
          - target: mingw
            ubsan: ON
          - ubsan: ON
            asan: ON
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set default environment variables
      run: echo "STATIC=OFF" >> "$GITHUB_ENV"
    - name: Set mingw environment variables
      if: matrix.target == 'mingw'
      run: |
          echo "CMAKE_TOOLCHAIN_FILE=$(pwd)/toolchains/mingw.cmake" >> "$GITHUB_ENV"
          echo "STATIC=ON" >> "$GITHUB_ENV"
    - name: Get ubuntu dependencies
      if: matrix.target == 'ubuntu'
      run: |
          sudo apt-get update
          sudo apt-get install libboost-all-dev doctest-dev
    - name: Get mingw dependencies
      if: matrix.target == 'mingw'
      run: |
          sudo apt-get update
          sudo apt-get install cmake make g++-mingw-w64-x86-64 mingw-w64-x86-64-dev mingw-w64-tools wine wine-binfmt
          sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
          sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
    - name: Getlibs
      run: ./getlibs.sh
    - name: Build and test
      run: |
          export CTEST_OUTPUT_ON_FAILURE=1
          mkdir build
          cd build
          cmake -DTESTING=yes -DSTATIC=$STATIC  -DASAN=${{ matrix.asan }} -DUBSAN=${{ matrix.ubsan }} -DCMAKE_BUILD_TYPE=Release -DENABLE_DBM_NEW=${{ matrix.newdbm }} ..
          cmake --build .
          ctest
  build-win-native:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get dependencies
      run: |
          vcpkg integrate install
          vcpkg install doctest --triplet x64-windows
          bash ./getlibs.sh
    - name: Build and test
      run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DTESTING=yes "-DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake" ..
          cmake --build . --config Release
          ctest --output-on-failure -C Release
  build-macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        asan: [ON, OFF]
        ubsan: [ON, OFF]
        exclude:
          - asan: ON
            ubsan: ON
    steps:
    - uses: actions/checkout@v2
    - name: Get dependencies
      run: brew install boost doctest && ./getlibs.sh
    - name: Build and test
      run: |
          export CTEST_OUTPUT_ON_FAILURE=1
          mkdir build
          cd build
          cmake -DTESTING=yes -DASAN=${{ matrix.asan }} -DUBSAN=${{ matrix.ubsan }} -DCMAKE_BUILD_TYPE=Release ..
          cmake --build .
          ctest

